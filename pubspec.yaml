name: dghabit
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.8.1

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  # Firebase Core
  firebase_core: ^4.1.1 
  firebase_auth: ^6.1.0 
  cloud_firestore: ^6.0.2 

  # Firebase UI for Authentication
  firebase_ui_auth: ^3.0.0 # For email
  firebase_ui_oauth_google: ^2.0.0 # For Google Sign-in

  # State Management
  flutter_riverpod: ^3.0.3 # A great choice for managing state

  # Local Storage
  hive: ^2.2.3
  hive_flutter: ^1.1.0

  # Automatic Data Tracking
  pedometer: ^4.0.1 
  usage_stats: ^1.1.0
  permission_handler: ^11.3.1

  # Analytics & Charting
  syncfusion_flutter_charts: ^31.1.19
  fl_chart: ^0.68.0

  # Utilities
  intl: 0.20.2 
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  google_fonts: ^6.2.1
  shared_preferences: ^2.3.2
  flutter_svg: ^2.0.10+1
  lottie: ^3.1.2
  package_info_plus: ^8.0.2

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^6.0.0
  flutter_launcher_icons: ^0.13.1
  flutter_native_splash: ^2.4.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/brand/icon_1024.png
    - assets/brand/splash_1024.png
    - assets/brand/onb_track.svg
    - assets/brand/onb_insights.svg
    - assets/brand/onb_personalize.svg
    # Optional Lottie decoration (if provided):
    # - assets/brand/sparkle.json

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package

flutter_icons:
  android: true
  ios: true
  remove_alpha_ios: true
  image_path: "assets/brand/icon_1024.png"
  adaptive_icon_background: "#FFF9C4" # light yellow background
  adaptive_icon_foreground: "assets/brand/icon_1024.png"
  image_path_ios: "assets/brand/icon_1024.png"
  # Note: per-appearance launcher icons for dark mode are not natively supported on Android/iOS.
  # We keep a single foreground; dark-mode feel is handled in-app.

flutter_native_splash:
  color: "#FFF9C4"
  color_dark: "#1F1B16"
  branding: "assets/brand/splash_1024.png"
  branding_dark: "assets/brand/splash_1024.png"
  branding_mode: bottom
  branding_bottom_padding: 24
  android_12:
    color: "#FFF9C4"
    color_dark: "#1F1B16"
    icon_background_color: "#FFF9C4"
    icon_background_color_dark: "#1F1B16"
  image: "assets/brand/icon_1024.png"
  image_dark: "assets/brand/icon_1024.png"
  android: true
  ios: true
